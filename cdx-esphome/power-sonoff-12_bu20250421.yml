# 5 MINUTE DELAYED POWER UP
substitutions:
  sonoff_num: "12"
  update_interval: 60s
  seconds_delay: 300s
  
esphome:
  name: power-sonoff-${sonoff_num}
  friendly_name: power-sonoff-${sonoff_num}
  platform: ESP8266
  board: esp01_1m
  on_boot:
    - script.execute: delayed_turn_on_power

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "2I4zcE+OPONqwrIAoOVmhRDltbEytXTV7cB/dXKyFVM="

ota:
  - platform: esphome
    password: "2b14a86780896823b543149bbcd7de0e"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Power-Sonoff-12 Fallback Hotspot"
    password: "LPKAu1xAuoVk"

captive_portal:

   
uart:
  rx_pin: RX
  baud_rate: 4800

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: "Button Sonoff ${sonoff_num}"
    on_press:
      - switch.toggle: relay
  - platform: status
    name: "Status Sonoff ${sonoff_num}"

sensor:
  - platform: cse7766
    energy:
      name: "Energy Sonoff ${sonoff_num}"
      filters:
        - throttle_average: ${update_interval}
      accuracy_decimals: 1
    current:
      name: "Current Sonoff ${sonoff_num}"
      filters:
        - throttle_average: ${update_interval}
      accuracy_decimals: 1
    voltage:
      name: "Voltage Sonoff ${sonoff_num}"
      filters:
        - throttle_average: ${update_interval}
      accuracy_decimals: 1
    power:
      name: "Power Sonoff ${sonoff_num}"
      filters:
        - throttle_average: ${update_interval}
      accuracy_decimals: 1
      id: my_power
  - platform: total_daily_energy
    name: "Daily Energy Sonoff ${sonoff_num}"
    accuracy_decimals: 1
    power_id: my_power

switch:
  - platform: gpio
    name: "Switch Sonoff ${sonoff_num}"
    pin: GPIO12
    id: relay
    restore_mode: ALWAYS_OFF

time:
  - platform: sntp
    id: my_time

status_led:
  pin: GPIO13
  
script:
  - id: delayed_turn_on_power
    then:
      - delay: ${seconds_delay}
      - if:
          condition:
            switch.is_off: relay
          then:
            - switch.turn_on: relay