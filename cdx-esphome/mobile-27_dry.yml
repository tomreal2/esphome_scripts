substitutions:
  mobilenum: "27"
  sensor_sda: "32"
  sensor_scl: "33"
  fan_pin: "26"
  humidifier_pin: "25"
  
esphome:
  name: mobile-${mobilenum}

esp32:
  board: nodemcu-32s
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "ujQ+Qbl7bPFeZ1YGD690uovRbbUKIHYsQSOlMxFm9jM="

ota:
  password: "69a602c7220f807336b90e706b014751"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Mobile-27 Fallback Hotspot"
    password: "bIvNKWy4lIGp"

captive_portal:
  
globals:
  - id: "max_temperature_${mobilenum}"
    initial_value: "76.0"
    type: float
    restore_value: no
  - id: "min_temperature_${mobilenum}"
    initial_value: "63.0"
    type: float
    restore_value: no
  - id: "max_humidity_${mobilenum}"
    initial_value: "64.0" #64.0 #"62.0" # "58.0"
    type: float
    restore_value: no
  - id: "min_humidity_${mobilenum}"
    initial_value: "61.0" #61.0 #"57.0" # "54.0"
    type: float
    restore_value: no
    
i2c:
  - id: i2c_sensor_${mobilenum}
    sda: ${sensor_sda}
    scl: ${sensor_scl}
    scan: True
    
sensor:
  - platform: sht3xd
    i2c_id: i2c_sensor_${mobilenum}
    temperature:
      id: "idtemperature_${mobilenum}"
      name: "Temperature${mobilenum}"
    humidity:
      id: "idhumidity_${mobilenum}"
      name: "Humidity${mobilenum}"
      accuracy_decimals: 1
    update_interval: 3s
    
switch:
  - platform: gpio
    name: "Humidifier_${mobilenum}"
    id: "idhumidifier_${mobilenum}"
    pin: ${humidifier_pin}
    restore_mode: ALWAYS_OFF
  - platform: gpio
    name: "Fan_${mobilenum}"
    id: "idfan_${mobilenum}"
    pin: ${fan_pin}
    restore_mode: ALWAYS_OFF
    
time:
  - platform: sntp
    id: sntp_time
    on_time:
      # Every 1 minute check fan, light, work light
      - seconds: /3 # /5 # /15 #30 # /30 # 0
        #minutes: /1
        then:
          - script.execute: sethumidifier_${mobilenum}
          - script.execute: setfan_${mobilenum}
          
script:
  - id: setfan_${mobilenum}
    then:    
      - if:
          condition:
            lambda: |-
              float temp =    (id(idtemperature_${mobilenum}).state * 1.8) + 32;
              float hum =     id(idhumidity_${mobilenum}).state;
              float maxtemp = id(max_temperature_${mobilenum});
              float mintemp = id(min_temperature_${mobilenum});
              float maxhum =  id(max_humidity_${mobilenum});
              float minhum =  id(min_humidity_${mobilenum});
              return ( (hum > maxhum)
                    || (temp > maxtemp && hum > minhum) );
          then:
            - if:
                condition:
                  - switch.is_off: idfan_${mobilenum}
                then:
                  - switch.turn_on: idfan_${mobilenum}
          else:
            - if:
                condition:
                  - switch.is_on: idfan_${mobilenum}
                then:
                  - switch.turn_off: idfan_${mobilenum}
  - id: sethumidifier_${mobilenum}
    then:    
      - if:
          condition:
            lambda: |-
              float temp =    (id(idtemperature_${mobilenum}).state * 1.8) + 32;
              float hum =     id(idhumidity_${mobilenum}).state;
              float maxtemp = id(max_temperature_${mobilenum});
              float mintemp = id(min_temperature_${mobilenum});
              float maxhum =  id(max_humidity_${mobilenum});
              float minhum =  id(min_humidity_${mobilenum});
              return ( hum < minhum );
          then:
            - if:
                condition:
                  - switch.is_off: idhumidifier_${mobilenum}
                then:
                  - switch.turn_on: idhumidifier_${mobilenum}
          else:
            - if:
                condition:
                  - switch.is_on: idhumidifier_${mobilenum}
                then:
                  - switch.turn_off: idhumidifier_${mobilenum}