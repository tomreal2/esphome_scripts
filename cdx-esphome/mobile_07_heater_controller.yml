esphome:
  name: mobile_07
  platform: ESP32
  board: nodemcu-32s
  on_boot:
    - wait_until:
        api.connected:
    - script.execute: set_heater_07
    
wifi:
  ssid: "Fennario"
  password: "likeadove"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Mobile 07 Fallback Hotspot"
    password: "uoya0sL7qBfA"

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:


switch:
  - platform: gpio
    name: "Power_07"
    id: "idpower_07"
    pin: 23 #pin15 - top right
    restore_mode: ALWAYS_OFF
    
i2c:
  - id: i2c_sensor
    scl: 16 #pin6 on right #outer wire
    sda: 4  #pin5 on right
    scan: True
  - id: i2c_display
    sda: 22 #pin14  -2nd from top on right
    scl: 1  #pin13  -3rd from top on right
    scan: True


sensor:
  - platform: hdc1080
    i2c_id: i2c_sensor
    temperature:
      id: "idtemperature07_1"
      name: "Temperature07_1"
    humidity:
      id: "idhumidity07_1"
      name: "Humidity07_1"
      accuracy_decimals: 1
    update_interval: 15s


time:
  - platform: sntp
    id: sntp_time
    on_time: 
      - seconds: /15
        then: # Every 15 seconds
          - script.execute: set_heater_07


globals:
  - id: "min_temperature_07"
    initial_value: "74.0"
    type: float
    restore_value: no  
    
script:
  - id: set_heater_07
    then:
      - if:
          condition:
            lambda: 'return ((id(idtemperature07_1).state * 1.8) + 32) < id(min_temperature_07);' 
          then:
            - script.execute: turn_on_heater
          else:
            - script.execute: turn_off_heater
  - id: turn_on_heater
    then:
      - if:
          condition:
            - switch.is_off: idpower_07
          then:
            - switch.turn_on: idpower_07
  - id: turn_off_heater
    then:
      - if:
          condition:
            - switch.is_on: idpower_07
          then:
            - switch.turn_off: idpower_07