esphome:
  name: mobile_06
  platform: ESP32
  board: nodemcu-32s

wifi:
  ssid: "Fennario"
  password: "likeadove"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Mobile 06 Fallback Hotspot"
    password: "uoya0sL7qBfA"

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

#i2c:
#  sda: 1
#  scl: 2
i2c:
  - id: bus_a
    sda: 1
    scl: 2
    scan: True
  - id: bus_b
    sda: 14 #pin 5 on left #outer wire
    scl: 15 #pin 3 on right
    scan: True
     

    
font:
  - file: "Roboto-Regular.ttf"
    id: roboto_regular_font
    size: 20
  - file: "Roboto-Regular.ttf"
    id: roboto_regular_font2
    size: 15
  - file: "Roboto-Regular.ttf"
    id: roboto_regular_font3
    size: 12
    
globals:
  - id: "is_burping"
    type: bool
    restore_value: no
    initial_value: 'false'
   
switch:
  - platform: gpio
    name: "Pump_6"
    id: "idpump_6"
    pin: 16
    restore_mode: ALWAYS_OFF
    
sensor:
  - platform: sht3xd
    i2c_id: bus_b
    temperature:
      id: "idtemperature6_1"
      name: "Temperature6_1"
    humidity:
      id: "idhumidity6_1"
      name: "Humidity6_1"
    address: 0x44
    update_interval: 30s
    
#sensor:
#  - platform: dht
#    pin: 3
#    temperature:
#      id: "idtemperature6_1"
#      name: "Temperature6_1"
#      unit_of_measurement: "°C"
      #filters:
      #  - lambda: return x * (9.0/5.0) + 32.0;
#    humidity:
#      id: "idhumidity6_1"
#      name: "Humidity6_1"
#    update_interval: 10s
#    model: DHT22 # AM2302 # DHT22 # DHT22_TYPE2 # AUTO_DETECT

#  - platform: dht
#    pin: 21
#    temperature:
#      id: "idtemperature6_2"
#      name: "Temperature6_2"
#      unit_of_measurement: "°C"
      #filters:
      #  - lambda: return x * (9.0/5.0) + 32.0;
#    humidity:
#      id: "idhumidity6_2"
#      name: "Humidity6_2"
#    update_interval: 139s
#    model: DHT22 # AM2302 # DHT22
    
time:
  - platform: sntp
    id: sntp_time
    on_time:
      # Every 1 minute
      - seconds: 0
        minutes: /1
        then:
          - script.execute: burpAbove65_06
          - if:
              condition: #3x Day 65.0 and above
                lambda: |-
                  auto time = id(sntp_time).now();
                  return id(idhumidity6_1).state >= 65.0
                    && time.second == 0
                    && time.minute == 0
                    && ( time.hour == 0
                      || time.hour == 8
                      || time.hour == 16 );
              then:
                - script.execute: burp_06
              else:
                - if:
                    condition: #1x Day above 64.0 
                      lambda: |-
                        auto time = id(sntp_time).now();
                        return id(idhumidity6_1).state >= 64.0
                          && time.second == 0
                          && time.minute == 0
                          &&   time.hour == 0;
                    then:
                      - script.execute: burp_06
                    else:
                      - if:
                          condition: #1x Week above 63.0
                            lambda: |-
                              auto time = id(sntp_time).now();
                              return id(idhumidity6_1).state >= 63.0
                                && time.second == 0
                                && time.minute == 0
                                &&   time.hour == 0
                                && time.day_of_week == 1;
                          then:
                            - script.execute: burp_06
                          else:
                            - if:
                                condition: #1x Month 61.0 and above
                                  lambda: |-
                                    auto time = id(sntp_time).now();
                                    return id(idhumidity6_1).state >= 61.0
                                      && time.second == 0
                                      && time.minute == 0
                                      &&   time.hour == 0
                                      && time.day_of_month == 1;
                                then:
                                  - script.execute: burp_06

                
display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    #reset_pin: D0
    i2c_id: bus_a
    address: 0x3C
    #it.print(0, 0, id(roboto_regular_font), "Hello World!");
    lambda: |-
      // top center.
      it.printf(64, 0, id(roboto_regular_font), TextAlign::TOP_CENTER, "Mobile 6");
      
      it.printf(0, 40, id(roboto_regular_font3), TextAlign::BASELINE_LEFT, "Smart Burp");
      
      // Print time in HH:MM format
      //it.strftime(0, 60, id(roboto_regular_font), TextAlign::BASELINE_LEFT, "%H:%M", id(sntp_time).now());
      it.strftime(0, 60, id(roboto_regular_font2), TextAlign::BASELINE_LEFT, "%I:%M %p", id(sntp_time).now());

      // Print humidity
      if (id(idhumidity6_1).has_state()) {
        it.printf(127, 23, id(roboto_regular_font), TextAlign::TOP_RIGHT , "%.1f%%", id(idhumidity6_1).state);
      }

      // Print temperature
      if (id(idtemperature6_1).has_state()) {
        it.printf(120, 60, id(roboto_regular_font), TextAlign::BASELINE_RIGHT , "%.1f°", (id(idtemperature6_1).state * (9.0/5.0) + 32.0));
      }
      

script:
  - id: burpAbove65_06
    then:
      - if:
          condition:
            lambda: "return id(is_burping) == false;"
          then:
            - if:
                condition:
                  switch.is_off: idpump_6
                then:
                  - if:
                      condition:
                        lambda: 'return id(idhumidity6_1).state > 65.0;' #65
                      then:
                        - delay: 2 sec
                        - switch.turn_on: idpump_6
                        - delay: 20 sec
                        - switch.turn_off: idpump_6
                else:
                  - if:
                      condition:
                        lambda: 'return id(idhumidity6_1).state <= 65.0;' #65
                      then:
                        - switch.turn_off: idpump_6
  - id: burp_06
    then:
      - if:
          condition:
            lambda: 'return id(idhumidity6_1).state > 62.0;'
          then:
            - lambda: "id(is_burping) = true;"
            - delay: 2 sec
            - switch.turn_on: idpump_6
            - delay: 15 sec
            - switch.turn_off: idpump_6
            - lambda: "id(is_burping) = false;"
          else:
            - if:
                condition:
                  lambda: 'return id(idhumidity6_1).state > 58.0;'
                then:
                  - lambda: "id(is_burping) = true;"
                  - delay: 1 sec
                  - switch.turn_on: idpump_6
                  - delay: 4 sec
                  - switch.turn_off: idpump_6
                  - lambda: "id(is_burping) = false;"